services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_service
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  pyspark:
    image: bitnami/spark:latest
    container_name: pyspark_master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
    ports:
      - "7077:7077"
      - "4040:4040"
    volumes:
      - ../src:/app/src
      - ../data:/app/data
#
#  teckwah-data-service:
#    build:
#      context: ..
#      dockerfile: docker/Dockerfile
#    image: teckwah-data:latest
#    container_name: teckwah-data-service
#    depends_on:
#      - kafka
#    environment:
#      #      - GOOGLE_APPLICATION_CREDENTIALS="/app/secrets/google/credentials.json"
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    ports:
#      - "8080:8080"
#    volumes:
#      - ../src:/app/src
#      - ../secrets:/app/secrets
#    command: [ "uvicorn", "src.api.main_api:app", "--host", "0.0.0.0", "--port", "8080" ]
#
#  dash-service:
#    build:
#      context: ..
#      dockerfile: docker/Dockerfile
#    image: teckwah-dash:latest
#    container_name: dash_service
#    environment:
#      - GOOGLE_APPLICATION_CREDENTIALS="/app/secrets/google/credentials.json"
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    ports:
#      - "8050:8050"
#    volumes:
#      - ../src:/app/src
#      - ../secrets:/app/secrets
#    command: [ "python", "src/dash_app/dashboard_app.py" ]
