from confluent_kafka import Consumer, KafkaException
import os

def start_consumer():
    KAFKA_TOPIC = os.environ.get('KAFKA_TOPIC', 'delivery_status')
    KAFKA_BOOTSTRAP_SERVERS = os.environ.get('KAFKA_BOOTSTRAP_SERVERS', 'localhost:9092')
    KAFKA_GROUP_ID = os.environ.get('KAFKA_GROUP_ID', 'delivery_consumer_group')

    conf = {
        'bootstrap.servers': KAFKA_BOOTSTRAP_SERVERS,
        'group.id': KAFKA_GROUP_ID,
        'auto.offset.reset': 'earliest'
    }

    consumer = Consumer(conf)
    consumer.subscribe([KAFKA_TOPIC])

    try:
        while True:
            msg = consumer.poll(1.0)
            if msg is None:
                continue
            if msg.error():
                print(f"Consumer 오류: {msg.error()}")
                continue

            # 메시지 처리 로직
            print(f"[성공] 메시지 수신: {msg.value().decode('utf-8')}")

    except KafkaException as e:
        print(f"[오류] Kafka Consumer 오류: {e}")
    finally:
        consumer.close()
